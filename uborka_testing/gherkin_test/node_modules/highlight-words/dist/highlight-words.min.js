"use strict";Object.defineProperty(exports,"__esModule",{value:!0});let IDX=36,HEX="";for(;IDX--;)HEX+=IDX.toString(36);function uid(e=11){let t="",n=e;for(;n--;)t+=HEX[Math.random()*36|0];return t}const escapeRegexp=e=>e.replace(/[|\\{}()[\]^$+*?.-]/g,t=>`\\${t}`),regexpQuery=({terms:e,matchExactly:t=!1})=>{if(typeof e!="string")throw new TypeError("Expected a string");const n=escapeRegexp(e.trim());return`(${t?n:n.split(" ").join("|")})`},buildRegexp=({terms:e,matchExactly:t=!1})=>{try{const n=/^([/~@;%#'])(.*?)\1([gimsuy]*)$/.exec(e);return n?new RegExp(n[2],n[3]):new RegExp(regexpQuery({terms:e,matchExactly:t}),"ig")}catch(n){throw new TypeError("Expected terms to be either a string or a RegExp!")}},hasProp=e=>t=>t!==null&&typeof t!="undefined"&&e in t,hasMatch=hasProp("match"),chunkExists=e=>typeof e!="undefined";function clip({curr:e,next:t,prev:n,clipBy:r=3}){const o=e.text.split(" "),i=o.length;if(e.match||r>=i)return e.text;const s="...";return chunkExists(t)&&chunkExists(n)&&hasMatch(n)&&hasMatch(t)?i>r*2?[...o.slice(0,r),s,...o.slice(-r)].join(" "):e.text:chunkExists(t)&&hasMatch(t)?[s,...o.slice(-r)].join(" "):chunkExists(n)&&hasMatch(n)?[...o.slice(0,r),s].join(" "):e.text}var __assign=Object.assign;const hasLength=e=>e.length>0,highlightWords=({text:e,query:t,clipBy:n,matchExactly:r=!1})=>{const o=typeof t=="string"?t.trim():t;if(o==="")return[{key:uid(),text:e,match:!1}];const i=buildRegexp({terms:t,matchExactly:r});return e.split(i).filter(hasLength).map(s=>({key:uid(),text:s,match:r?s.toLowerCase()===o.toLowerCase():i.test(s)})).map((s,a,c)=>__assign(__assign({},s),typeof n=="number"&&{text:clip(__assign(__assign(__assign({curr:s},a<c.length-1&&{next:c[a+1]}),a>0&&{prev:c[a-1]}),{clipBy:n}))}))};exports.default=highlightWords;
//# sourceMappingURL=highlight-words.min.js.map
